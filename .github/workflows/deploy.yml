name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - development
        - staging
        - production

env:
  PYTHON_VERSION: '3.11'
  
jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate ARM Template
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Validate ARM Template
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./azuredeploy.json
        deploymentMode: Validate

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: github.event_name == 'push'
      with:
        file: ./coverage.xml
        flags: unittests

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Azure
    needs: [validate, test]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy ARM Template
      id: deploy-arm
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./azuredeploy.json
        parameters: >
          projectName="${{ secrets.PROJECT_NAME }}"
          location="${{ secrets.AZURE_LOCATION }}"
          openAILocation="${{ secrets.OPENAI_LOCATION }}"
    
    - name: Get Function App name
      id: get-function-name
      run: |
        echo "FUNCTION_APP_NAME=${{ steps.deploy-arm.outputs.functionAppName }}" >> $GITHUB_OUTPUT
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Build Python package
      run: |
        cd src
        pip install --target=".python_packages/lib/site-packages" -r requirements.txt
        cd ..
    
    - name: Package Function App
      run: |
        cd src
        zip -r ../deploy.zip . -x "*.pyc" -x "__pycache__/*" -x ".pytest_cache/*" -x "local.settings.json"
        cd ..
    
    - name: Deploy to Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ steps.get-function-name.outputs.FUNCTION_APP_NAME }}
        package: ./deploy.zip
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
    
    - name: Wait for deployment
      run: sleep 60
    
    - name: Smoke Test
      run: |
        FUNCTION_URL="${{ steps.deploy-arm.outputs.functionUrl }}"
        FUNCTION_KEY="${{ steps.deploy-arm.outputs.functionAppKey }}"
        
        response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$FUNCTION_URL?code=$FUNCTION_KEY" \
          -H "Content-Type: application/json" \
          -d '{"user_input": "Hello", "conversation_history": []}')
        
        if [ $response -eq 200 ]; then
          echo "✅ Smoke test passed!"
        else
          echo "❌ Smoke test failed with status code: $response"
          exit 1
        fi
    
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## Changes in this Release
          - Automated deployment from commit ${{ github.sha }}
          - Function App: ${{ steps.get-function-name.outputs.FUNCTION_APP_NAME }}
          
          ## Deployment Info
          - Environment: ${{ github.event.inputs.environment || 'production' }}
          - Azure Region: ${{ secrets.AZURE_LOCATION }}
        draft: false
        prerelease: false